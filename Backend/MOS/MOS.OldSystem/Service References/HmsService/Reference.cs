//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MOS.OldSystem.HmsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HmsService.IeMRMainService")]
    public interface IeMRMainService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/GetCopyright", ReplyAction="http://tempuri.org/IeMRMainService/GetCopyrightResponse")]
        string GetCopyright();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/GetCopyright", ReplyAction="http://tempuri.org/IeMRMainService/GetCopyrightResponse")]
        System.Threading.Tasks.Task<string> GetCopyrightAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_AddNewParaclinical", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_AddNewParaclinicalResponse")]
        string srv_hms_AddNewParaclinical(string DateMake, string PatID, string MedID, string RoomID, string GroupID, string ParaclinicalID, string DoctorID, bool isEmergency, bool isPayCard, string Description, bool isService, string login_name, string CodeParaclinical_NewHis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_AddNewParaclinical", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_AddNewParaclinicalResponse")]
        System.Threading.Tasks.Task<string> srv_hms_AddNewParaclinicalAsync(string DateMake, string PatID, string MedID, string RoomID, string GroupID, string ParaclinicalID, string DoctorID, bool isEmergency, bool isPayCard, string Description, bool isService, string login_name, string CodeParaclinical_NewHis);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_SetUpdPatient", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_SetUpdPatientResponse")]
        string srv_hms_SetUpdPatient(long PatientID, string Name, System.DateTime YBrith, int Sex, string HomeNumber, string Address, string PrecintID, string Relatedinfo, int Work, int Ethnic, int Military, string Company, string Tax, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_SetUpdPatient", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_SetUpdPatientResponse")]
        System.Threading.Tasks.Task<string> srv_hms_SetUpdPatientAsync(long PatientID, string Name, System.DateTime YBrith, int Sex, string HomeNumber, string Address, string PrecintID, string Relatedinfo, int Work, int Ethnic, int Military, string Company, string Tax, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/insReceivePatient_NonInsurance", ReplyAction="http://tempuri.org/IeMRMainService/insReceivePatient_NonInsuranceResponse")]
        string insReceivePatient_NonInsurance(
                    string PatID, 
                    string MedID, 
                    string Name, 
                    string YBrith, 
                    int Sex, 
                    string HomeNumber, 
                    string Address, 
                    int ProvinceID, 
                    int Districtid, 
                    int PrecintID, 
                    string Relatedinfo, 
                    string Diag, 
                    string Doctor, 
                    string ExamRoom, 
                    string ExamStyle, 
                    int Emergency, 
                    int WorkID, 
                    int Chanel, 
                    int Hospital, 
                    string ICD, 
                    int DoubleExam, 
                    string ListExam, 
                    int Military, 
                    string login_name, 
                    int EthnicID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/insReceivePatient_NonInsurance", ReplyAction="http://tempuri.org/IeMRMainService/insReceivePatient_NonInsuranceResponse")]
        System.Threading.Tasks.Task<string> insReceivePatient_NonInsuranceAsync(
                    string PatID, 
                    string MedID, 
                    string Name, 
                    string YBrith, 
                    int Sex, 
                    string HomeNumber, 
                    string Address, 
                    int ProvinceID, 
                    int Districtid, 
                    int PrecintID, 
                    string Relatedinfo, 
                    string Diag, 
                    string Doctor, 
                    string ExamRoom, 
                    string ExamStyle, 
                    int Emergency, 
                    int WorkID, 
                    int Chanel, 
                    int Hospital, 
                    string ICD, 
                    int DoubleExam, 
                    string ListExam, 
                    int Military, 
                    string login_name, 
                    int EthnicID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_insReceivePatient_Insurance", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_insReceivePatient_InsuranceResponse")]
        string srv_hms_insReceivePatient_Insurance(
                    string PatID, 
                    string MedID, 
                    string Name, 
                    string YBrith, 
                    int Sex, 
                    string CardCode, 
                    string InsFrom, 
                    string InsTo, 
                    int Hospital, 
                    string CardAdd, 
                    string HomeNumber, 
                    string Address, 
                    int ProvinceID, 
                    int Districtid, 
                    int PrecintID, 
                    string Relatedinfo, 
                    string Diag, 
                    string Doctor, 
                    string ExamRoom, 
                    string ExamStyle, 
                    int Emergency, 
                    int WorkID, 
                    int Chanel, 
                    int Hospital1, 
                    string ICD, 
                    int DoubleExam, 
                    string ListExam, 
                    int Military, 
                    string login_name, 
                    int EthnicID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_insReceivePatient_Insurance", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_insReceivePatient_InsuranceResponse")]
        System.Threading.Tasks.Task<string> srv_hms_insReceivePatient_InsuranceAsync(
                    string PatID, 
                    string MedID, 
                    string Name, 
                    string YBrith, 
                    int Sex, 
                    string CardCode, 
                    string InsFrom, 
                    string InsTo, 
                    int Hospital, 
                    string CardAdd, 
                    string HomeNumber, 
                    string Address, 
                    int ProvinceID, 
                    int Districtid, 
                    int PrecintID, 
                    string Relatedinfo, 
                    string Diag, 
                    string Doctor, 
                    string ExamRoom, 
                    string ExamStyle, 
                    int Emergency, 
                    int WorkID, 
                    int Chanel, 
                    int Hospital1, 
                    string ICD, 
                    int DoubleExam, 
                    string ListExam, 
                    int Military, 
                    string login_name, 
                    int EthnicID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_GetPrecinctID", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_GetPrecinctIDResponse")]
        string srv_hms_GetPrecinctID(string PrecintAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_GetPrecinctID", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_GetPrecinctIDResponse")]
        System.Threading.Tasks.Task<string> srv_hms_GetPrecinctIDAsync(string PrecintAdd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_AddNewReception", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_AddNewReceptionResponse")]
        string srv_hms_AddNewReception(string PatID, string RoomExamID, string ServiceID, int isLine, int isDoubleExam, string CardCode, string InsFrom, string InsTo, int Hospital, string ICD, string ListExam, string Login_name, string MedID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_AddNewReception", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_AddNewReceptionResponse")]
        System.Threading.Tasks.Task<string> srv_hms_AddNewReceptionAsync(string PatID, string RoomExamID, string ServiceID, int isLine, int isDoubleExam, string CardCode, string InsFrom, string InsTo, int Hospital, string ICD, string ListExam, string Login_name, string MedID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_get_ordernumber", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_get_ordernumberResponse")]
        string srv_hms_get_ordernumber(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_get_ordernumber", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_get_ordernumberResponse")]
        System.Threading.Tasks.Task<string> srv_hms_get_ordernumberAsync(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_ExamResult", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_ExamResultResponse")]
        string srv_hms_ExamResult(long ReceptionID, string MedID, string ExamDate, int SuggestID, int ConclusionID, int TreatmentdivisionID, int Day, int RoomID, string ICD, int HospitalID, string login_name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IeMRMainService/srv_hms_ExamResult", ReplyAction="http://tempuri.org/IeMRMainService/srv_hms_ExamResultResponse")]
        System.Threading.Tasks.Task<string> srv_hms_ExamResultAsync(long ReceptionID, string MedID, string ExamDate, int SuggestID, int ConclusionID, int TreatmentdivisionID, int Day, int RoomID, string ICD, int HospitalID, string login_name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IeMRMainServiceChannel : MOS.OldSystem.HmsService.IeMRMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IeMRMainServiceClient : System.ServiceModel.ClientBase<MOS.OldSystem.HmsService.IeMRMainService>, MOS.OldSystem.HmsService.IeMRMainService {
        
        public IeMRMainServiceClient() {
        }
        
        public IeMRMainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IeMRMainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IeMRMainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IeMRMainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetCopyright() {
            return base.Channel.GetCopyright();
        }
        
        public System.Threading.Tasks.Task<string> GetCopyrightAsync() {
            return base.Channel.GetCopyrightAsync();
        }
        
        public string srv_hms_AddNewParaclinical(string DateMake, string PatID, string MedID, string RoomID, string GroupID, string ParaclinicalID, string DoctorID, bool isEmergency, bool isPayCard, string Description, bool isService, string login_name, string CodeParaclinical_NewHis) {
            return base.Channel.srv_hms_AddNewParaclinical(DateMake, PatID, MedID, RoomID, GroupID, ParaclinicalID, DoctorID, isEmergency, isPayCard, Description, isService, login_name, CodeParaclinical_NewHis);
        }
        
        public System.Threading.Tasks.Task<string> srv_hms_AddNewParaclinicalAsync(string DateMake, string PatID, string MedID, string RoomID, string GroupID, string ParaclinicalID, string DoctorID, bool isEmergency, bool isPayCard, string Description, bool isService, string login_name, string CodeParaclinical_NewHis) {
            return base.Channel.srv_hms_AddNewParaclinicalAsync(DateMake, PatID, MedID, RoomID, GroupID, ParaclinicalID, DoctorID, isEmergency, isPayCard, Description, isService, login_name, CodeParaclinical_NewHis);
        }
        
        public string srv_hms_SetUpdPatient(long PatientID, string Name, System.DateTime YBrith, int Sex, string HomeNumber, string Address, string PrecintID, string Relatedinfo, int Work, int Ethnic, int Military, string Company, string Tax, string UserID) {
            return base.Channel.srv_hms_SetUpdPatient(PatientID, Name, YBrith, Sex, HomeNumber, Address, PrecintID, Relatedinfo, Work, Ethnic, Military, Company, Tax, UserID);
        }
        
        public System.Threading.Tasks.Task<string> srv_hms_SetUpdPatientAsync(long PatientID, string Name, System.DateTime YBrith, int Sex, string HomeNumber, string Address, string PrecintID, string Relatedinfo, int Work, int Ethnic, int Military, string Company, string Tax, string UserID) {
            return base.Channel.srv_hms_SetUpdPatientAsync(PatientID, Name, YBrith, Sex, HomeNumber, Address, PrecintID, Relatedinfo, Work, Ethnic, Military, Company, Tax, UserID);
        }
        
        public string insReceivePatient_NonInsurance(
                    string PatID, 
                    string MedID, 
                    string Name, 
                    string YBrith, 
                    int Sex, 
                    string HomeNumber, 
                    string Address, 
                    int ProvinceID, 
                    int Districtid, 
                    int PrecintID, 
                    string Relatedinfo, 
                    string Diag, 
                    string Doctor, 
                    string ExamRoom, 
                    string ExamStyle, 
                    int Emergency, 
                    int WorkID, 
                    int Chanel, 
                    int Hospital, 
                    string ICD, 
                    int DoubleExam, 
                    string ListExam, 
                    int Military, 
                    string login_name, 
                    int EthnicID) {
            return base.Channel.insReceivePatient_NonInsurance(PatID, MedID, Name, YBrith, Sex, HomeNumber, Address, ProvinceID, Districtid, PrecintID, Relatedinfo, Diag, Doctor, ExamRoom, ExamStyle, Emergency, WorkID, Chanel, Hospital, ICD, DoubleExam, ListExam, Military, login_name, EthnicID);
        }
        
        public System.Threading.Tasks.Task<string> insReceivePatient_NonInsuranceAsync(
                    string PatID, 
                    string MedID, 
                    string Name, 
                    string YBrith, 
                    int Sex, 
                    string HomeNumber, 
                    string Address, 
                    int ProvinceID, 
                    int Districtid, 
                    int PrecintID, 
                    string Relatedinfo, 
                    string Diag, 
                    string Doctor, 
                    string ExamRoom, 
                    string ExamStyle, 
                    int Emergency, 
                    int WorkID, 
                    int Chanel, 
                    int Hospital, 
                    string ICD, 
                    int DoubleExam, 
                    string ListExam, 
                    int Military, 
                    string login_name, 
                    int EthnicID) {
            return base.Channel.insReceivePatient_NonInsuranceAsync(PatID, MedID, Name, YBrith, Sex, HomeNumber, Address, ProvinceID, Districtid, PrecintID, Relatedinfo, Diag, Doctor, ExamRoom, ExamStyle, Emergency, WorkID, Chanel, Hospital, ICD, DoubleExam, ListExam, Military, login_name, EthnicID);
        }
        
        public string srv_hms_insReceivePatient_Insurance(
                    string PatID, 
                    string MedID, 
                    string Name, 
                    string YBrith, 
                    int Sex, 
                    string CardCode, 
                    string InsFrom, 
                    string InsTo, 
                    int Hospital, 
                    string CardAdd, 
                    string HomeNumber, 
                    string Address, 
                    int ProvinceID, 
                    int Districtid, 
                    int PrecintID, 
                    string Relatedinfo, 
                    string Diag, 
                    string Doctor, 
                    string ExamRoom, 
                    string ExamStyle, 
                    int Emergency, 
                    int WorkID, 
                    int Chanel, 
                    int Hospital1, 
                    string ICD, 
                    int DoubleExam, 
                    string ListExam, 
                    int Military, 
                    string login_name, 
                    int EthnicID) {
            return base.Channel.srv_hms_insReceivePatient_Insurance(PatID, MedID, Name, YBrith, Sex, CardCode, InsFrom, InsTo, Hospital, CardAdd, HomeNumber, Address, ProvinceID, Districtid, PrecintID, Relatedinfo, Diag, Doctor, ExamRoom, ExamStyle, Emergency, WorkID, Chanel, Hospital1, ICD, DoubleExam, ListExam, Military, login_name, EthnicID);
        }
        
        public System.Threading.Tasks.Task<string> srv_hms_insReceivePatient_InsuranceAsync(
                    string PatID, 
                    string MedID, 
                    string Name, 
                    string YBrith, 
                    int Sex, 
                    string CardCode, 
                    string InsFrom, 
                    string InsTo, 
                    int Hospital, 
                    string CardAdd, 
                    string HomeNumber, 
                    string Address, 
                    int ProvinceID, 
                    int Districtid, 
                    int PrecintID, 
                    string Relatedinfo, 
                    string Diag, 
                    string Doctor, 
                    string ExamRoom, 
                    string ExamStyle, 
                    int Emergency, 
                    int WorkID, 
                    int Chanel, 
                    int Hospital1, 
                    string ICD, 
                    int DoubleExam, 
                    string ListExam, 
                    int Military, 
                    string login_name, 
                    int EthnicID) {
            return base.Channel.srv_hms_insReceivePatient_InsuranceAsync(PatID, MedID, Name, YBrith, Sex, CardCode, InsFrom, InsTo, Hospital, CardAdd, HomeNumber, Address, ProvinceID, Districtid, PrecintID, Relatedinfo, Diag, Doctor, ExamRoom, ExamStyle, Emergency, WorkID, Chanel, Hospital1, ICD, DoubleExam, ListExam, Military, login_name, EthnicID);
        }
        
        public string srv_hms_GetPrecinctID(string PrecintAdd) {
            return base.Channel.srv_hms_GetPrecinctID(PrecintAdd);
        }
        
        public System.Threading.Tasks.Task<string> srv_hms_GetPrecinctIDAsync(string PrecintAdd) {
            return base.Channel.srv_hms_GetPrecinctIDAsync(PrecintAdd);
        }
        
        public string srv_hms_AddNewReception(string PatID, string RoomExamID, string ServiceID, int isLine, int isDoubleExam, string CardCode, string InsFrom, string InsTo, int Hospital, string ICD, string ListExam, string Login_name, string MedID) {
            return base.Channel.srv_hms_AddNewReception(PatID, RoomExamID, ServiceID, isLine, isDoubleExam, CardCode, InsFrom, InsTo, Hospital, ICD, ListExam, Login_name, MedID);
        }
        
        public System.Threading.Tasks.Task<string> srv_hms_AddNewReceptionAsync(string PatID, string RoomExamID, string ServiceID, int isLine, int isDoubleExam, string CardCode, string InsFrom, string InsTo, int Hospital, string ICD, string ListExam, string Login_name, string MedID) {
            return base.Channel.srv_hms_AddNewReceptionAsync(PatID, RoomExamID, ServiceID, isLine, isDoubleExam, CardCode, InsFrom, InsTo, Hospital, ICD, ListExam, Login_name, MedID);
        }
        
        public string srv_hms_get_ordernumber(string Type) {
            return base.Channel.srv_hms_get_ordernumber(Type);
        }
        
        public System.Threading.Tasks.Task<string> srv_hms_get_ordernumberAsync(string Type) {
            return base.Channel.srv_hms_get_ordernumberAsync(Type);
        }
        
        public string srv_hms_ExamResult(long ReceptionID, string MedID, string ExamDate, int SuggestID, int ConclusionID, int TreatmentdivisionID, int Day, int RoomID, string ICD, int HospitalID, string login_name) {
            return base.Channel.srv_hms_ExamResult(ReceptionID, MedID, ExamDate, SuggestID, ConclusionID, TreatmentdivisionID, Day, RoomID, ICD, HospitalID, login_name);
        }
        
        public System.Threading.Tasks.Task<string> srv_hms_ExamResultAsync(long ReceptionID, string MedID, string ExamDate, int SuggestID, int ConclusionID, int TreatmentdivisionID, int Day, int RoomID, string ICD, int HospitalID, string login_name) {
            return base.Channel.srv_hms_ExamResultAsync(ReceptionID, MedID, ExamDate, SuggestID, ConclusionID, TreatmentdivisionID, Day, RoomID, ICD, HospitalID, login_name);
        }
    }
}
