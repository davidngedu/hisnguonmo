<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FormExportByCard.layoutControl1.Text" xml:space="preserve">
    <value>layoutControl1</value>
  </data>
  <data name="FormExportByCard.layoutControlItem3.Text" xml:space="preserve">
    <value>From:</value>
  </data>
  <data name="FormExportByCard.layoutControlItem4.Text" xml:space="preserve">
    <value>Arrive:</value>
  </data>
  <data name="FormExportByCard.simpleButton1.Text" xml:space="preserve">
    <value>Export excel</value>
  </data>
  <data name="FormExportByCard.Text" xml:space="preserve">
    <value>Export xml from tag</value>
  </data>
  <data name="IVT_LANGUAGE_KEY__UC_EXPORT_XML4210__COMBO_FILTER__ITEM_ALL" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="IVT_LANGUAGE_KEY__UC_EXPORT_XML4210__COMBO_FILTER__ITEM_IN_LIST" xml:space="preserve">
    <value>In the list</value>
  </data>
  <data name="IVT_LANGUAGE_KEY__UC_EXPORT_XML4210__COMBO_FILTER__ITEM_OUT_LIST" xml:space="preserve">
    <value>Apart list</value>
  </data>
  <data name="IVT_LANGUAGE_KEY__UC_EXPORT_XML4210__TXT_KEYWORD__NULL_VALUE" xml:space="preserve">
    <value>List of top health insurance card numbers separated by, (comma)</value>
  </data>
  <data name="UCExportXml.btnDownload.Text" xml:space="preserve">
    <value>Download sample files</value>
  </data>
  <data name="UCExportXml.BtnExportExcel.Text" xml:space="preserve">
    <value>Export DL BN</value>
  </data>
  <data name="UCExportXml.BtnExportExcel.ToolTip" xml:space="preserve">
    <value>Export patient data</value>
  </data>
  <data name="UCExportXml.btnExportGroup.Text" xml:space="preserve">
    <value>Export of merged XML</value>
  </data>
  <data name="UCExportXml.btnExportXml.Text" xml:space="preserve">
    <value>Export Xml (Ctrl E)</value>
  </data>
  <data name="UCExportXml.btnExportXMLcollinear.Text" xml:space="preserve">
    <value>Online XML export</value>
  </data>
  <data name="UCExportXml.btnFind.Text" xml:space="preserve">
    <value>Find (Ctrl F)</value>
  </data>
  <data name="UCExportXml.btnImport.Text" xml:space="preserve">
    <value>NK filter condition</value>
  </data>
  <data name="UCExportXml.btnImport.ToolTip" xml:space="preserve">
    <value>Import filter condition</value>
  </data>
  <data name="UCExportXml.btnPath.ToolTip" xml:space="preserve">
    <value>Choose a save folder</value>
  </data>
  <data name="UCExportXml.cboFilterType.Text" xml:space="preserve">
    <value>In the DS at the beginning of the following health insurance card:</value>
  </data>
  <data name="UCExportXml.cboStatusFeeLockOrEndTreatment.Text" xml:space="preserve">
    <value>Time to lock hospital fees from:</value>
  </data>
  <data name="UCExportXml.checkAutoDownFileXml.Properties.Caption" xml:space="preserve">
    <value>Automatically download xml files</value>
  </data>
  <data name="UCExportXml.gridCol_Clinical_InTime.Caption" xml:space="preserve">
    <value>Hospitalization time</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_Dob.Caption" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_FeeLockTime.Caption" xml:space="preserve">
    <value>Hospital fee lock</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_Gender.Caption" xml:space="preserve">
    <value>Sex</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_HeinCardNumber.Caption" xml:space="preserve">
    <value>bhyt card number</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_InTime.Caption" xml:space="preserve">
    <value>Time in</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_OutTime.Caption" xml:space="preserve">
    <value>Time out</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_Stt.Caption" xml:space="preserve">
    <value>STT</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_TreatmentCode.Caption" xml:space="preserve">
    <value>Treatment code</value>
  </data>
  <data name="UCExportXml.gridCol_Treatment_VirPatientName.Caption" xml:space="preserve">
    <value>Patient's name</value>
  </data>
  <data name="UCExportXml.gridCol_ViewXML.Caption" xml:space="preserve">
    <value>XML</value>
  </data>
  <data name="UCExportXml.gridColumn_Treatment_EndDepartment.Caption" xml:space="preserve">
    <value>Faculty ends</value>
  </data>
  <data name="UCExportXml.gridColumn_Treatment_PatientCode.Caption" xml:space="preserve">
    <value>Patient code</value>
  </data>
  <data name="UCExportXml.gridColumn_Treatment_TotalHeinPrice.Caption" xml:space="preserve">
    <value>Bhyt pay</value>
  </data>
  <data name="UCExportXml.gridColumn_Treatment_TotalPatientPrice.Caption" xml:space="preserve">
    <value>Patient pays</value>
  </data>
  <data name="UCExportXml.gridColumn_Treatment_TotalPrice.Caption" xml:space="preserve">
    <value>total cost</value>
  </data>
  <data name="UCExportXml.gridColumn_Treatment_XmlDesc.Caption" xml:space="preserve">
    <value>xml push status</value>
  </data>
  <data name="UCExportXml.gridColumn1.Caption" xml:space="preserve">
    <value>Streaming XML</value>
  </data>
  <data name="UCExportXml.gridColumn2.Caption" xml:space="preserve">
    <value>Streaming XML Status</value>
  </data>
  <data name="UCExportXml.gridColumn3.Caption" xml:space="preserve">
    <value>Clinic/Hospital</value>
  </data>
  <data name="UCExportXml.labelControl1.Text" xml:space="preserve">
    <value>Branch:</value>
  </data>
  <data name="UCExportXml.layoutControl1.Text" xml:space="preserve">
    <value>layoutControl1</value>
  </data>
  <data name="UCExportXml.layoutControlItem13.Text" xml:space="preserve">
    <value>Profile Type:</value>
  </data>
  <data name="UCExportXml.layoutControlItem2.Text" xml:space="preserve">
    <value>Treatment area:</value>
  </data>
  <data name="UCExportXml.layoutControlItem20.Text" xml:space="preserve">
    <value>Save directory:</value>
  </data>
  <data name="UCExportXml.layoutControlItem9.Text" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="UCExportXml.LciCboBranch.Text" xml:space="preserve">
    <value>Branch:</value>
  </data>
  <data name="UCExportXml.lciFolderSave.OptionsToolTip.ToolTip" xml:space="preserve">
    <value>Folder to save files automatically downloads</value>
  </data>
  <data name="UCExportXml.lciFolderSave.Text" xml:space="preserve">
    <value>Folder:</value>
  </data>
  <data name="UCExportXml.lciIntervalTime.OptionsToolTip.ToolTip" xml:space="preserve">
    <value>The process cycle automatically downloads the xml file</value>
  </data>
  <data name="UCExportXml.lciIntervalTime.Text" xml:space="preserve">
    <value>Cycle(minutes):</value>
  </data>
  <data name="UCExportXml.lciTimeFrom.Text" xml:space="preserve">
    <value>Time to lock hospital fees from:</value>
  </data>
  <data name="UCExportXml.lciTimeTo.Text" xml:space="preserve">
    <value>arrive:</value>
  </data>
  <data name="UCExportXml.txtHeinCardPrefix.Properties.NullValuePrompt" xml:space="preserve">
    <value>List of bhyt card numbers separated by commas, (comma)</value>
  </data>
  <data name="UCExportXml.txtKeyword.Properties.NullValuePrompt" xml:space="preserve">
    <value>Key word</value>
  </data>
  <data name="UCExportXml.txtPatientCode.Properties.NullValuePrompt" xml:space="preserve">
    <value>Patient code</value>
  </data>
  <data name="UCExportXml.txtTreatCodeOrHeinCard.Properties.NullValuePrompt" xml:space="preserve">
    <value>Treatment code</value>
  </data>
  <data name="UCExportXml.benhNhanTra" xml:space="preserve">
    <value>Patient pays</value>
  </data>
  <data name="UCExportXml.chietKhau" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="UCExportXml.dongChiTra" xml:space="preserve">
    <value>Co-pay</value>
  </data>
  <data name="UCExportXml.donGia" xml:space="preserve">
    <value>Unit price</value>
  </data>
  <data name="UCExportXml.haoPhi" xml:space="preserve">
    <value>Expend</value>
  </data>
  <data name="UCExportXml.maDichVu" xml:space="preserve">
    <value>Service Code</value>
  </data>
  <data name="UCExportXml.maYeuCau" xml:space="preserve">
    <value>Request Code</value>
  </data>
  <data name="UCExportXml.soLuong" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="UCExportXml.tenDv" xml:space="preserve">
    <value>Service Name</value>
  </data>
  <data name="UCExportXml.thanhTien" xml:space="preserve">
    <value>Into money</value>
  </data>
  <data name="UCExportXml.vat" xml:space="preserve">
    <value>Vat %</value>
  </data>
</root>